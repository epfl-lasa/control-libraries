// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: state_representation/space/joint/joint_state.proto

#include "state_representation/space/joint/joint_state.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace state_representation {
namespace proto {
constexpr JointState::JointState(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : joint_names_()
  , positions_()
  , velocities_()
  , accelerations_()
  , torques_()
  , state_(nullptr){}
struct JointStateDefaultTypeInternal {
  constexpr JointStateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JointStateDefaultTypeInternal() {}
  union {
    JointState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JointStateDefaultTypeInternal _JointState_default_instance_;
constexpr JointPositions::JointPositions(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : joint_names_()
  , positions_()
  , state_(nullptr){}
struct JointPositionsDefaultTypeInternal {
  constexpr JointPositionsDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JointPositionsDefaultTypeInternal() {}
  union {
    JointPositions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JointPositionsDefaultTypeInternal _JointPositions_default_instance_;
constexpr JointVelocities::JointVelocities(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : joint_names_()
  , velocities_()
  , state_(nullptr){}
struct JointVelocitiesDefaultTypeInternal {
  constexpr JointVelocitiesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JointVelocitiesDefaultTypeInternal() {}
  union {
    JointVelocities _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JointVelocitiesDefaultTypeInternal _JointVelocities_default_instance_;
constexpr JointTorques::JointTorques(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : joint_names_()
  , torques_()
  , state_(nullptr){}
struct JointTorquesDefaultTypeInternal {
  constexpr JointTorquesDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~JointTorquesDefaultTypeInternal() {}
  union {
    JointTorques _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT JointTorquesDefaultTypeInternal _JointTorques_default_instance_;
}  // namespace proto
}  // namespace state_representation
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, state_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, joint_names_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, positions_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, velocities_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, accelerations_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointState, torques_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointPositions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointPositions, state_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointPositions, joint_names_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointPositions, positions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointVelocities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointVelocities, state_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointVelocities, joint_names_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointVelocities, velocities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointTorques, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointTorques, state_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointTorques, joint_names_),
  PROTOBUF_FIELD_OFFSET(::state_representation::proto::JointTorques, torques_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::state_representation::proto::JointState)},
  { 11, -1, sizeof(::state_representation::proto::JointPositions)},
  { 19, -1, sizeof(::state_representation::proto::JointVelocities)},
  { 27, -1, sizeof(::state_representation::proto::JointTorques)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::state_representation::proto::_JointState_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::state_representation::proto::_JointPositions_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::state_representation::proto::_JointVelocities_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::state_representation::proto::_JointTorques_default_instance_),
};

const char descriptor_table_protodef_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2state_representation/space/joint/joint"
  "_state.proto\022\032state_representation.proto"
  "\032 state_representation/state.proto\"\242\001\n\nJ"
  "ointState\0220\n\005state\030\001 \001(\0132!.state_represe"
  "ntation.proto.State\022\023\n\013joint_names\030\002 \003(\t"
  "\022\021\n\tpositions\030\003 \003(\001\022\022\n\nvelocities\030\004 \003(\001\022"
  "\025\n\raccelerations\030\005 \003(\001\022\017\n\007torques\030\006 \003(\001\""
  "j\n\016JointPositions\0220\n\005state\030\001 \001(\0132!.state"
  "_representation.proto.State\022\023\n\013joint_nam"
  "es\030\002 \003(\t\022\021\n\tpositions\030\003 \003(\001\"l\n\017JointVelo"
  "cities\0220\n\005state\030\001 \001(\0132!.state_representa"
  "tion.proto.State\022\023\n\013joint_names\030\002 \003(\t\022\022\n"
  "\nvelocities\030\004 \003(\001\"f\n\014JointTorques\0220\n\005sta"
  "te\030\001 \001(\0132!.state_representation.proto.St"
  "ate\022\023\n\013joint_names\030\002 \003(\t\022\017\n\007torques\030\006 \003("
  "\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_deps[1] = {
  &::descriptor_table_state_5frepresentation_2fstate_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto = {
  false, false, 609, descriptor_table_protodef_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto, "state_representation/space/joint/joint_state.proto", 
  &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_once, descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_deps, 1, 4,
  schemas, file_default_instances, TableStruct_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto::offsets,
  file_level_metadata_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto, file_level_enum_descriptors_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto, file_level_service_descriptors_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_getter() {
  return &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto(&descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto);
namespace state_representation {
namespace proto {

// ===================================================================

class JointState::_Internal {
 public:
  static const ::state_representation::proto::State& state(const JointState* msg);
};

const ::state_representation::proto::State&
JointState::_Internal::state(const JointState* msg) {
  return *msg->state_;
}
void JointState::clear_state() {
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
JointState::JointState(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  joint_names_(arena),
  positions_(arena),
  velocities_(arena),
  accelerations_(arena),
  torques_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:state_representation.proto.JointState)
}
JointState::JointState(const JointState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_names_(from.joint_names_),
      positions_(from.positions_),
      velocities_(from.velocities_),
      accelerations_(from.accelerations_),
      torques_(from.torques_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new ::state_representation::proto::State(*from.state_);
  } else {
    state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:state_representation.proto.JointState)
}

void JointState::SharedCtor() {
state_ = nullptr;
}

JointState::~JointState() {
  // @@protoc_insertion_point(destructor:state_representation.proto.JointState)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JointState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete state_;
}

void JointState::ArenaDtor(void* object) {
  JointState* _this = reinterpret_cast< JointState* >(object);
  (void)_this;
}
void JointState::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointState::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JointState::Clear() {
// @@protoc_insertion_point(message_clear_start:state_representation.proto.JointState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_names_.Clear();
  positions_.Clear();
  velocities_.Clear();
  accelerations_.Clear();
  torques_.Clear();
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointState::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .state_representation.proto.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string joint_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_joint_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "state_representation.proto.JointState.joint_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated double positions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_positions(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25) {
          _internal_add_positions(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double velocities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_velocities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33) {
          _internal_add_velocities(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double accelerations = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_accelerations(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41) {
          _internal_add_accelerations(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // repeated double torques = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_torques(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49) {
          _internal_add_torques(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JointState::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:state_representation.proto.JointState)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::state(this), target, stream);
  }

  // repeated string joint_names = 2;
  for (int i = 0, n = this->_internal_joint_names_size(); i < n; i++) {
    const auto& s = this->_internal_joint_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "state_representation.proto.JointState.joint_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated double positions = 3;
  if (this->_internal_positions_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_positions(), target);
  }

  // repeated double velocities = 4;
  if (this->_internal_velocities_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_velocities(), target);
  }

  // repeated double accelerations = 5;
  if (this->_internal_accelerations_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_accelerations(), target);
  }

  // repeated double torques = 6;
  if (this->_internal_torques_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_torques(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state_representation.proto.JointState)
  return target;
}

size_t JointState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state_representation.proto.JointState)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string joint_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(joint_names_.size());
  for (int i = 0, n = joint_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      joint_names_.Get(i));
  }

  // repeated double positions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_positions_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated double velocities = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_velocities_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated double accelerations = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_accelerations_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // repeated double torques = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_torques_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JointState::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state_representation.proto.JointState)
  GOOGLE_DCHECK_NE(&from, this);
  const JointState* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JointState>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state_representation.proto.JointState)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state_representation.proto.JointState)
    MergeFrom(*source);
  }
}

void JointState::MergeFrom(const JointState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state_representation.proto.JointState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  joint_names_.MergeFrom(from.joint_names_);
  positions_.MergeFrom(from.positions_);
  velocities_.MergeFrom(from.velocities_);
  accelerations_.MergeFrom(from.accelerations_);
  torques_.MergeFrom(from.torques_);
  if (from.has_state()) {
    _internal_mutable_state()->::state_representation::proto::State::MergeFrom(from._internal_state());
  }
}

void JointState::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state_representation.proto.JointState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointState::CopyFrom(const JointState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state_representation.proto.JointState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointState::IsInitialized() const {
  return true;
}

void JointState::InternalSwap(JointState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  joint_names_.InternalSwap(&other->joint_names_);
  positions_.InternalSwap(&other->positions_);
  velocities_.InternalSwap(&other->velocities_);
  accelerations_.InternalSwap(&other->accelerations_);
  torques_.InternalSwap(&other->torques_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointState::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_getter, &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_once,
      file_level_metadata_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto[0]);
}

// ===================================================================

class JointPositions::_Internal {
 public:
  static const ::state_representation::proto::State& state(const JointPositions* msg);
};

const ::state_representation::proto::State&
JointPositions::_Internal::state(const JointPositions* msg) {
  return *msg->state_;
}
void JointPositions::clear_state() {
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
JointPositions::JointPositions(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  joint_names_(arena),
  positions_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:state_representation.proto.JointPositions)
}
JointPositions::JointPositions(const JointPositions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_names_(from.joint_names_),
      positions_(from.positions_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new ::state_representation::proto::State(*from.state_);
  } else {
    state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:state_representation.proto.JointPositions)
}

void JointPositions::SharedCtor() {
state_ = nullptr;
}

JointPositions::~JointPositions() {
  // @@protoc_insertion_point(destructor:state_representation.proto.JointPositions)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JointPositions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete state_;
}

void JointPositions::ArenaDtor(void* object) {
  JointPositions* _this = reinterpret_cast< JointPositions* >(object);
  (void)_this;
}
void JointPositions::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointPositions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JointPositions::Clear() {
// @@protoc_insertion_point(message_clear_start:state_representation.proto.JointPositions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_names_.Clear();
  positions_.Clear();
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointPositions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .state_representation.proto.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string joint_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_joint_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "state_representation.proto.JointPositions.joint_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated double positions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_positions(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25) {
          _internal_add_positions(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JointPositions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:state_representation.proto.JointPositions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::state(this), target, stream);
  }

  // repeated string joint_names = 2;
  for (int i = 0, n = this->_internal_joint_names_size(); i < n; i++) {
    const auto& s = this->_internal_joint_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "state_representation.proto.JointPositions.joint_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated double positions = 3;
  if (this->_internal_positions_size() > 0) {
    target = stream->WriteFixedPacked(3, _internal_positions(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state_representation.proto.JointPositions)
  return target;
}

size_t JointPositions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state_representation.proto.JointPositions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string joint_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(joint_names_.size());
  for (int i = 0, n = joint_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      joint_names_.Get(i));
  }

  // repeated double positions = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_positions_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JointPositions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state_representation.proto.JointPositions)
  GOOGLE_DCHECK_NE(&from, this);
  const JointPositions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JointPositions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state_representation.proto.JointPositions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state_representation.proto.JointPositions)
    MergeFrom(*source);
  }
}

void JointPositions::MergeFrom(const JointPositions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state_representation.proto.JointPositions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  joint_names_.MergeFrom(from.joint_names_);
  positions_.MergeFrom(from.positions_);
  if (from.has_state()) {
    _internal_mutable_state()->::state_representation::proto::State::MergeFrom(from._internal_state());
  }
}

void JointPositions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state_representation.proto.JointPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointPositions::CopyFrom(const JointPositions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state_representation.proto.JointPositions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointPositions::IsInitialized() const {
  return true;
}

void JointPositions::InternalSwap(JointPositions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  joint_names_.InternalSwap(&other->joint_names_);
  positions_.InternalSwap(&other->positions_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointPositions::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_getter, &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_once,
      file_level_metadata_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto[1]);
}

// ===================================================================

class JointVelocities::_Internal {
 public:
  static const ::state_representation::proto::State& state(const JointVelocities* msg);
};

const ::state_representation::proto::State&
JointVelocities::_Internal::state(const JointVelocities* msg) {
  return *msg->state_;
}
void JointVelocities::clear_state() {
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
JointVelocities::JointVelocities(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  joint_names_(arena),
  velocities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:state_representation.proto.JointVelocities)
}
JointVelocities::JointVelocities(const JointVelocities& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_names_(from.joint_names_),
      velocities_(from.velocities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new ::state_representation::proto::State(*from.state_);
  } else {
    state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:state_representation.proto.JointVelocities)
}

void JointVelocities::SharedCtor() {
state_ = nullptr;
}

JointVelocities::~JointVelocities() {
  // @@protoc_insertion_point(destructor:state_representation.proto.JointVelocities)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JointVelocities::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete state_;
}

void JointVelocities::ArenaDtor(void* object) {
  JointVelocities* _this = reinterpret_cast< JointVelocities* >(object);
  (void)_this;
}
void JointVelocities::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointVelocities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JointVelocities::Clear() {
// @@protoc_insertion_point(message_clear_start:state_representation.proto.JointVelocities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_names_.Clear();
  velocities_.Clear();
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointVelocities::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .state_representation.proto.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string joint_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_joint_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "state_representation.proto.JointVelocities.joint_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated double velocities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_velocities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33) {
          _internal_add_velocities(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JointVelocities::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:state_representation.proto.JointVelocities)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::state(this), target, stream);
  }

  // repeated string joint_names = 2;
  for (int i = 0, n = this->_internal_joint_names_size(); i < n; i++) {
    const auto& s = this->_internal_joint_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "state_representation.proto.JointVelocities.joint_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated double velocities = 4;
  if (this->_internal_velocities_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_velocities(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state_representation.proto.JointVelocities)
  return target;
}

size_t JointVelocities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state_representation.proto.JointVelocities)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string joint_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(joint_names_.size());
  for (int i = 0, n = joint_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      joint_names_.Get(i));
  }

  // repeated double velocities = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_velocities_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JointVelocities::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state_representation.proto.JointVelocities)
  GOOGLE_DCHECK_NE(&from, this);
  const JointVelocities* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JointVelocities>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state_representation.proto.JointVelocities)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state_representation.proto.JointVelocities)
    MergeFrom(*source);
  }
}

void JointVelocities::MergeFrom(const JointVelocities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state_representation.proto.JointVelocities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  joint_names_.MergeFrom(from.joint_names_);
  velocities_.MergeFrom(from.velocities_);
  if (from.has_state()) {
    _internal_mutable_state()->::state_representation::proto::State::MergeFrom(from._internal_state());
  }
}

void JointVelocities::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state_representation.proto.JointVelocities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointVelocities::CopyFrom(const JointVelocities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state_representation.proto.JointVelocities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointVelocities::IsInitialized() const {
  return true;
}

void JointVelocities::InternalSwap(JointVelocities* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  joint_names_.InternalSwap(&other->joint_names_);
  velocities_.InternalSwap(&other->velocities_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointVelocities::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_getter, &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_once,
      file_level_metadata_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto[2]);
}

// ===================================================================

class JointTorques::_Internal {
 public:
  static const ::state_representation::proto::State& state(const JointTorques* msg);
};

const ::state_representation::proto::State&
JointTorques::_Internal::state(const JointTorques* msg) {
  return *msg->state_;
}
void JointTorques::clear_state() {
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
}
JointTorques::JointTorques(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  joint_names_(arena),
  torques_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:state_representation.proto.JointTorques)
}
JointTorques::JointTorques(const JointTorques& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      joint_names_(from.joint_names_),
      torques_(from.torques_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_state()) {
    state_ = new ::state_representation::proto::State(*from.state_);
  } else {
    state_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:state_representation.proto.JointTorques)
}

void JointTorques::SharedCtor() {
state_ = nullptr;
}

JointTorques::~JointTorques() {
  // @@protoc_insertion_point(destructor:state_representation.proto.JointTorques)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void JointTorques::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete state_;
}

void JointTorques::ArenaDtor(void* object) {
  JointTorques* _this = reinterpret_cast< JointTorques* >(object);
  (void)_this;
}
void JointTorques::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void JointTorques::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void JointTorques::Clear() {
// @@protoc_insertion_point(message_clear_start:state_representation.proto.JointTorques)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  joint_names_.Clear();
  torques_.Clear();
  if (GetArenaForAllocation() == nullptr && state_ != nullptr) {
    delete state_;
  }
  state_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* JointTorques::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .state_representation.proto.State state = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_state(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string joint_names = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_joint_names();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "state_representation.proto.JointTorques.joint_names"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated double torques = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_torques(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49) {
          _internal_add_torques(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag == 0) || ((tag & 7) == 4)) {
          CHK_(ptr);
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JointTorques::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:state_representation.proto.JointTorques)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::state(this), target, stream);
  }

  // repeated string joint_names = 2;
  for (int i = 0, n = this->_internal_joint_names_size(); i < n; i++) {
    const auto& s = this->_internal_joint_names(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "state_representation.proto.JointTorques.joint_names");
    target = stream->WriteString(2, s, target);
  }

  // repeated double torques = 6;
  if (this->_internal_torques_size() > 0) {
    target = stream->WriteFixedPacked(6, _internal_torques(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:state_representation.proto.JointTorques)
  return target;
}

size_t JointTorques::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:state_representation.proto.JointTorques)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string joint_names = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(joint_names_.size());
  for (int i = 0, n = joint_names_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      joint_names_.Get(i));
  }

  // repeated double torques = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_torques_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    total_size += data_size;
  }

  // .state_representation.proto.State state = 1;
  if (this->has_state()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *state_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JointTorques::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:state_representation.proto.JointTorques)
  GOOGLE_DCHECK_NE(&from, this);
  const JointTorques* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JointTorques>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:state_representation.proto.JointTorques)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:state_representation.proto.JointTorques)
    MergeFrom(*source);
  }
}

void JointTorques::MergeFrom(const JointTorques& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:state_representation.proto.JointTorques)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  joint_names_.MergeFrom(from.joint_names_);
  torques_.MergeFrom(from.torques_);
  if (from.has_state()) {
    _internal_mutable_state()->::state_representation::proto::State::MergeFrom(from._internal_state());
  }
}

void JointTorques::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:state_representation.proto.JointTorques)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointTorques::CopyFrom(const JointTorques& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:state_representation.proto.JointTorques)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointTorques::IsInitialized() const {
  return true;
}

void JointTorques::InternalSwap(JointTorques* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  joint_names_.InternalSwap(&other->joint_names_);
  torques_.InternalSwap(&other->torques_);
  swap(state_, other->state_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JointTorques::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_getter, &descriptor_table_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto_once,
      file_level_metadata_state_5frepresentation_2fspace_2fjoint_2fjoint_5fstate_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
}  // namespace state_representation
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::state_representation::proto::JointState* Arena::CreateMaybeMessage< ::state_representation::proto::JointState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::state_representation::proto::JointState >(arena);
}
template<> PROTOBUF_NOINLINE ::state_representation::proto::JointPositions* Arena::CreateMaybeMessage< ::state_representation::proto::JointPositions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::state_representation::proto::JointPositions >(arena);
}
template<> PROTOBUF_NOINLINE ::state_representation::proto::JointVelocities* Arena::CreateMaybeMessage< ::state_representation::proto::JointVelocities >(Arena* arena) {
  return Arena::CreateMessageInternal< ::state_representation::proto::JointVelocities >(arena);
}
template<> PROTOBUF_NOINLINE ::state_representation::proto::JointTorques* Arena::CreateMaybeMessage< ::state_representation::proto::JointTorques >(Arena* arena) {
  return Arena::CreateMessageInternal< ::state_representation::proto::JointTorques >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
